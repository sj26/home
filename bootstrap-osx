#!/usr/bin/env zsh

set -e -x

### homebrew #################################################################

# Figure out homebrew prefix (amd64 vs arm64)
if [[ -z "$HOMEBREW_PREFIX" ]]; then
  UNAME_MACHINE="$(uname -m)"
  if [[ "$UNAME_MACHINE" == "arm64" ]]; then
    HOMEBREW_PREFIX="/opt/homebrew"
  else
    HOMEBREW_PREFIX="/usr/local"
  fi
fi

# Make sure homebrew is installed
if [[ ! -f "$HOMEBREW_PREFIX/bin/brew" ]]; then
  bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

# Install all brews from the Brewfile
brew bundle --file="$HOME/.home/Brewfile"

### fzf + vim ################################################################

# Add `fzf` as an autoload-able vim library -- I don't know why this isn't the
# default setup
if [[ -d "$HOMEBREW_PREFIX/opt/fzf" && -d "$HOMEBREW_PREFIX/share/vim" ]]; then
  for autoload in "$HOMEBREW_PREFIX"/share/vim/*/autoload; do
    if [[ ! -L "$autoload/fzf.vim" ]]; then
      ln -s "/usr/local/opt/fzf/plugin/fzf.vim" "$autoload/fzf.vim"
    fi
  done
fi

### rbenv ####################################################################

# Keep binaries outta my homedir
export RBENV_ROOT="/opt/rbenv"

[[ -d "$RBENV_ROOT" ]] ||
  sudo install -d -o "$USER" -g staff -m 0775 "$RBENV_ROOT"

# Make a cache dir so we keep source tarballs
mkdir -p "$RBENV_ROOT/cache"

# Make sure we always install these gems
for gem in gem-browse bundler; do
  grep -q "$gem" "$RBENV_ROOT/default-gems" ||
    echo "$gem" >> "$RBENV_ROOT/default-gems"
done

# Install a standard version of rbenv
rbenv install --skip-existing --keep 2.6.2

# Use it as the default global version
rbenv global 2.6.2

### nodenv ###################################################################

# Keep binaries outta my homedir
export NODENV_ROOT="/opt/nodenv"

[[ -d "$NODENV_ROOT" ]] ||
  sudo install -d -o "$USER" -g staff -m 0775 "$NODENV_ROOT"

# Make a cache dir so we keep source tarballs
mkdir -p "$NODENV_ROOT/cache"

# Make sure we always install these packages
for package in yarn; do
  [[ -f "$NODENV_ROOT/default-packages" ]] && grep -q "$package" "$NODENV_ROOT/default-packages" ||
    echo "$package" >> "$NODENV_ROOT/default-packages"
done

# Install a standard version of nodenv
nodenv install --skip-existing --keep 11.1.0

# Use it as the default global version
nodenv global 11.1.0
